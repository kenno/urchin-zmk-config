// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#define ___ &trans

// Home row mods macro
#define HRML(k1,k2,k3,k4) &ht LGUI k1  &ht LALT k2  &ht LCTRL k3  &ht LSHFT k4
#define HRMR(k1,k2,k3,k4) &ht RSHFT k1  &ht RCTRL k2  &ht RALT k3  &ht RGUI k4

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";
        // both W and F for ESC
        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp ESC>;
        };
        // both L and U for BSPC
        combo_bspc {
            timeout-ms = <50>;
            key-positions = <6 7>;
            bindings = <&kp BSPC>;
        };
        // both U and Y for DEL
        combo_del {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&kp DEL>;
        };
        // Q, A, Z for left bootloader
        combo_left_bootloader {
            timeout-ms = <50>;
            key-positions = <0 10 20>;
            bindings = <&bootloader>;
        };
        // ', O, / for right bootloader
        combo_right_bootloader {
            timeout-ms = <50>;
            key-positions = <9 19 29>;
            bindings = <&bootloader>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        base_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  W       │  F       │  P       │  B       │   │  J       │  L       │  U       │  Y       │  ' "     │
            &kp Q      &kp W      &kp F      &kp P      &kp B          &kp J      &kp L      &kp U      &kp Y      &kp SQT
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A       │  R       │  S       │  T       │  G       │   │  M       │  N       │  E       │  I       │  O       │
            HRML(A,        R,         S,         T)     &kp G          &kp M      HRMR(N,        E,         I,        O)
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Z       │  X       │  C       │  D       │  V       │   │  K       │  H       │ , <      │ . >      │ / ?      │
            &kp Z      &kp X      &kp C      &kp D      &kp V          &kp K      &kp H      &kp COMMA  &kp DOT    &kp FSLH
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                            &lt 2 SPACE &kp TAB        &lt 3 ENTER &lt 1 BSPC
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        // 1. Num and Multi
        number_multi_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  [       │  7       │  8       │  9       │  ]       │   │          │  MUTE    │  STOP    │  P/PAUSE │          │
            &kp LBKT   &kp N7     &kp N8     &kp N9     &kp RBKT       ___       &kp K_MUTE  &kp K_STOP &kp K_PP   ___ 
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  ;       │  4       │  5       │  6       │  =       │   │ EP Tog   │ PREVIOUS │ VOL DOWN │  VOL UP  │  NEXT    │
            &kp SEMI   &kp N4     &kp N5     &kp N6     &kp EQUAL  &ext_power EP_TOG &kp K_PREV &kp K_VOL_DN &kp K_VOL_UP &kp K_NEXT
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ `        │  1       │  2       │  3       │  \       │   │ CLEAR BT │PROFILE 0 │PROFILE 1 │PROFILE 2 │PROFILE 3 │
            &kp GRAVE  &kp N1     &kp N2     &kp N3     &kp BSLH   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &kp N0     &kp MINUS      ___        ___
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        // 2. Fun and Nav
        fun_nav_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ PRINTSCR │ F7       │ F8       │ F9       │ F12      │   │  REDO    │  PASTE   │  COPY    │  CUT     │  UNDO    │
            &kp PSCRN  &kp F7     &kp F8     &kp F9     &kp F12        &kp K_REDO &kp K_PASTE &kp K_COPY &kp K_CUT &kp K_UNDO 
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ SCROLLLO │ F4       │ F5       │ F6       │ F11      │   │ CAPSLOCK │  LEFT A  │  DOWN A  │  UP A    │  RIGHT A │
            &kp SLCK   &kp F4     &kp F5     &kp F6     &kp F11        &kp CAPS   &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT 
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ P/B      │ F1       │ F2       │ F3       │ F10      │   │  INSERT  │  HOME    │  PAGE D  │  PAGE U  │  END     │
            &kp PAUSE_BREAK &kp F1   &kp F2  &kp F3     &kp F10        &kp INS    &kp HOME   &kp PG_DN  &kp PG_UP  &kp END
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             ___        ___            &kp ENTER  &kp BSPC
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        // 3. Sym
        symbol_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  {       │  &       │  *       │  (       │  }       │   │          │          │          │          │          │
            &kp LBRC   &kp AMPS   &kp ASTRK  &kp LPAR   &kp RBRC       ___        ___        ___        ___        ___
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  :       │  $       │  %       │  ^       │  +       │   │          │          │          │          │          │
            &kp COLON  &kp DLLR   &kp PRCNT  &kp CARET  &kp PLUS       ___        ___        ___        ___        ___
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  ~       │  !       │  @       │  #       │  |       │   │          │          │          │          │          │
            &kp TILDE  &kp EXCL   &kp AT     &kp HASH   &kp PIPE       ___        ___        ___        ___        ___
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &kp RPAR   &kp UNDER      ___        ___
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

    };
};
